{"version":3,"sources":["utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PeopleTable/PeopleTable.tsx","utils/filterFunction.tsx","api.ts","components/ErrorLoading.tsx","components/NoPeople.tsx","pages/PeoplePage.tsx","components/Navbar/Navbar.tsx","pages/HomePage.tsx","pages/ErrorPage.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","centuriesButton","PeopleFilters","setSearchParams","query","get","sex","centuries","getAll","className","classNames","type","placeholder","onChange","event","target","trim","map","century","includes","filter","year","length","Loader","sortingField","PeopleTable","allPeople","slug","useParams","sort","order","visiblePeople","useMemo","people","filteredPeople","normQuery","toLowerCase","person","name","motherName","fatherName","Math","ceil","born","a","b","localeCompare","reverse","peopleFilter","field","toUpperCase","slice","onClick","died","mother","father","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","ErrorLoading","NoPeople","PeoplePage","useState","setPeople","error","setError","loading","setLoading","useEffect","getPeople","catch","newError","finally","find","findPerson","Navbar","handleClassName","isActive","role","HomePage","ErrorPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.cb6185df.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../utils/searchHelper';\nimport { SearchLink } from '../SearchLink';\n\nconst centuriesButton = ['16', '17', '18', '19', '20'];\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const search = getSearchWith(\n      searchParams,\n      { query: event.target.value.trim() || null },\n    );\n\n    setSearchParams(search);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          params={{ sex: null }}\n          className={classNames({\n            'is-active': sex === '',\n          })}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'm' }}\n          className={classNames({\n            'is-active': sex === 'm',\n          })}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'f' }}\n          className={classNames({\n            'is-active': sex === 'f',\n          })}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuriesButton.map(century => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={classNames('button mr-1', {\n                  'is-info': centuries.includes(century),\n                })}\n                params={{\n                  centuries: centuries.includes(century)\n                    ? centuries.filter(year => year !== century)\n                    : [...centuries, century],\n                }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={classNames('button is-success', {\n                'is-outlined': centuries.length !== 0,\n              })}\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            centuries: null,\n            sex: null,\n            query: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link, useParams, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useMemo } from 'react';\nimport { Person } from '../../types';\nimport { peopleFilter } from '../../utils/filterFunction';\nimport { SearchLink } from '../SearchLink';\n\nconst sortingField = ['name', 'sex', 'born', 'died'];\n\ntype Props = {\n  allPeople: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ allPeople }) => {\n  const { slug } = useParams();\n\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  const setSortType = (value: string) => {\n    if (sort === value && !order) {\n      return {\n        sort: value,\n        order: 'desc',\n      };\n    }\n\n    if (sort === value && order) {\n      return {\n        sort: null,\n        order: null,\n      };\n    }\n\n    return {\n      sort: value,\n      order: null,\n    };\n  };\n\n  const visiblePeople: Person[] = useMemo(() => (\n    peopleFilter(allPeople,\n      {\n        query,\n        sex,\n        centuries,\n        sort,\n        order,\n      })\n  ), [allPeople, query, sex, centuries, sort, order]);\n\n  if (visiblePeople.length === 0) {\n    return (\n      <p>No results for your search</p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {sortingField.map(field => (\n            <th key={field}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {field[0].toUpperCase() + field.slice(1)}\n                <SearchLink\n                  params={setSortType(`${field}`)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('fas fa-sort', {\n                      'fa-sort-up': sort === field && order !== 'desc',\n                      'fa-sort-down': sort === field && order === 'desc',\n                    })}\n                    />\n                  </span>\n                </SearchLink>\n              </span>\n            </th>\n          ))}\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visiblePeople.map(person => (\n          <tr\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': person.slug === slug,\n            })}\n            data-cy=\"person\"\n          >\n            <td>\n              <Link\n                to={`/people/${person.slug}`}\n                onClick={() => person.slug === slug}\n                className={classNames({\n                  'has-text-danger': person.sex === 'f',\n                })}\n              >\n                {person.name}\n              </Link>\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {\n                person.mother?.slug ? (\n                  <Link\n                    to={`/people/${person.mother?.slug}`}\n                    className=\"has-text-danger\"\n                    onClick={() => slug === person.mother?.slug}\n                  >\n                    {person.mother?.name}\n                  </Link>\n                ) : (\n                  <p>{person.motherName ? person.motherName : '-'}</p>\n                )\n              }\n\n            </td>\n            <td>\n              {\n                person.father?.slug ? (\n                  <Link\n                    to={`/people/${person.father?.slug}`}\n                    onClick={() => slug === person.father?.slug}\n                  >\n                    {person.fatherName ? person.fatherName : '-'}\n                  </Link>\n                ) : (\n                  <p>{person.fatherName ? person.fatherName : '-'}</p>\n                )\n              }\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from '../types';\n\ninterface Params {\n  query: string | null,\n  sex: string | null,\n  centuries: string[],\n  sort: string,\n  order: string,\n}\n\nexport const peopleFilter = (people : Person[], {\n  query,\n  sex,\n  centuries,\n  sort,\n  order,\n}: Params):Person[] => {\n  let filteredPeople = [...people];\n\n  if (query) {\n    const normQuery = query.trim().toLowerCase();\n\n    filteredPeople = filteredPeople.filter(person => {\n      return person.name.toLowerCase().includes(normQuery)\n        || (person.motherName || '').toLowerCase().includes(normQuery)\n        || (person.fatherName || '').toLowerCase().includes(normQuery);\n    });\n  }\n\n  if (sex) {\n    filteredPeople = filteredPeople.filter(person => person.sex === sex);\n  }\n\n  if (centuries.length > 0) {\n    filteredPeople = filteredPeople.filter(person => {\n      return centuries.includes(Math.ceil(person.born / 100).toString());\n    });\n  }\n\n  if (sort) {\n    filteredPeople.sort((a: Person, b: Person) => {\n      switch (sort) {\n        case 'name':\n        case 'sex':\n          return a[sort].localeCompare(b[sort]);\n\n        case 'born':\n        case 'died':\n          return a[sort] - b[sort];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (order) {\n    filteredPeople.reverse();\n  }\n\n  return filteredPeople;\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const ErrorLoading: React.FC = () => (\n  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n    Something went wrong\n  </p>\n);\n","export const NoPeople: React.FC = () => (\n  <p data-cy=\"noPeopleMessage\">\n    There are no people on the server\n  </p>\n);\n","import { useEffect, useMemo, useState } from 'react';\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { ErrorLoading } from '../components/ErrorLoading';\nimport { NoPeople } from '../components/NoPeople';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch((newError) => {\n        setError(true);\n        throw newError;\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  const allPeople = useMemo(() => (\n    people.map(person => {\n      const mother = people.find(findPerson => (\n        findPerson.name === person.motherName\n      ));\n\n      const father = people.find(findPerson => (\n        findPerson.name === person.fatherName\n      ));\n\n      return { ...person, mother, father };\n    })\n  ), [people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {!loading\n            && (\n              <div className=\"column is-7-tablet is-narrow-desktop\">\n                <PeopleFilters />\n              </div>\n            )}\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {loading && <Loader />}\n\n              {error && <ErrorLoading />}\n\n              {!error && !loading && people.length === 0 && <NoPeople />}\n\n              {people.length !== 0 && !error\n                && <PeopleTable allPeople={allPeople} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  const handleClassName = ({ isActive }: { isActive: boolean }) => classNames(\n    'navbar-item', { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={handleClassName}>Home</NavLink>\n          <NavLink to=\"/people\" className={handleClassName}>People</NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const ErrorPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './pages/HomePage';\nimport { ErrorPage } from './pages/ErrorPage';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<ErrorPage />} />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}